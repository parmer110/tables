# Generated by Django 5.0.1 on 2024-01-24 21:54

import common.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('administration', '0001_initial'),
        ('auth', '0001_initial'),
        ('contenttypes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AcademicCategory',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=20, unique=True, verbose_name='Category Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcademicRank',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Academic Rank Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Classification',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('app', models.CharField(blank=True, choices=[('contenttypes', 'contenttypes'), ('administration', 'administration'), ('common', 'common'), ('django_extensions', 'django_extensions'), ('rest_framework', 'rest_framework'), ('rest_framework_simplejwt', 'rest_framework_simplejwt'), ('sslserver', 'sslserver'), ('corsheaders', 'corsheaders'), ('token_blacklist', 'token_blacklist'), ('admin', 'admin'), ('auth', 'auth'), ('sessions', 'sessions'), ('messages', 'messages'), ('staticfiles', 'staticfiles'), ('django_user_agents', 'django_user_agents')], max_length=50, null=True, verbose_name='Application')),
                ('model', models.CharField(blank=True, max_length=40, null=True, verbose_name='Model Name')),
                ('name', models.CharField(max_length=100, verbose_name='Classifications Name')),
                ('sub_class', models.CharField(blank=True, max_length=100, null=True, verbose_name='Sub Classifications Name')),
                ('type', models.CharField(max_length=100, verbose_name='Type of Classification')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DateSlot',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('start_date', models.DateField(verbose_name='Start Date')),
                ('end_date', models.DateField(verbose_name='End Date')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100, verbose_name='Title')),
                ('document', models.FileField(upload_to='documents/pdf', verbose_name='Document')),
                ('image', models.FileField(upload_to='documents/img', verbose_name='Picture')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='EducationalDegree',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Educational Degree Name')),
                ('abbreviation', models.CharField(max_length=100, verbose_name='Degree Abbreviation')),
                ('description', models.TextField(verbose_name='Description')),
                ('duration_years', models.PositiveIntegerField(verbose_name='Duration (Years)')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='JobRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Role Name')),
                ('description', models.TextField(verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='LegalTypes',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200)),
                ('country', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('region', models.CharField(blank=True, max_length=100, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Longitude')),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='Latitude')),
                ('gps_longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='GPS Longitude')),
                ('gps_latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True, verbose_name='GPS Latitude')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MyCounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='default', max_length=20)),
                ('value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('text', models.TextField()),
                ('is_required', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('start_time', models.TimeField(verbose_name='Start Time')),
                ('end_time', models.TimeField(verbose_name='End Time')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TokenLifetime',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('lifetime', models.DurationField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Translate',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('persian', models.TextField(blank=True, null=True)),
                ('english', models.TextField(blank=True, null=True)),
                ('arabic', models.TextField(blank=True, null=True)),
                ('russian', models.TextField(blank=True, null=True)),
                ('chineseTraditional', models.TextField(blank=True, null=True)),
                ('spanish', models.TextField(blank=True, null=True)),
                ('french', models.TextField(blank=True, null=True)),
                ('german', models.TextField(blank=True, null=True)),
                ('italian', models.TextField(blank=True, null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True, verbose_name='User Description')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('token_lifetime', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.tokenlifetime')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AppModels',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('application', models.CharField(choices=[('contenttypes', 'contenttypes'), ('administration', 'administration'), ('common', 'common'), ('django_extensions', 'django_extensions'), ('rest_framework', 'rest_framework'), ('rest_framework_simplejwt', 'rest_framework_simplejwt'), ('sslserver', 'sslserver'), ('corsheaders', 'corsheaders'), ('token_blacklist', 'token_blacklist'), ('admin', 'admin'), ('auth', 'auth'), ('sessions', 'sessions'), ('messages', 'messages'), ('staticfiles', 'staticfiles'), ('django_user_agents', 'django_user_agents')], max_length=50)),
                ('model', models.CharField(max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'unique_together': {('application', 'model')},
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv6')),
                ('action', models.CharField(max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('object_id', models.PositiveIntegerField(default=0)),
                ('content_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BlacklistedToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=1000)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('reason', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FieldOfStudy',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Field of Study Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('classification', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='field_of_study', to='common.classification', verbose_name='نوع رشته تحصیلی')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Jobs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Job Name')),
                ('description', models.TextField(verbose_name='Description')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.jobroles', verbose_name='Related Role')),
            ],
        ),
        migrations.AddField(
            model_name='jobroles',
            name='Jobs',
            field=models.ManyToManyField(blank=True, to='common.jobs'),
        ),
        migrations.CreateModel(
            name='LegalEntity',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=255)),
                ('registration_number', models.CharField(max_length=50, unique=True)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(max_length=20)),
                ('classification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity', to='common.classification')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='legal_entity', to='common.legaltypes')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='LoginRecord',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('ipv4_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv4', verbose_name='IPv4 Address')),
                ('ipv6_address', models.GenericIPAddressField(blank=True, null=True, protocol='IPv6', verbose_name='IPv6 Address')),
                ('ip_validation_status', models.CharField(blank=True, max_length=255, null=True)),
                ('login_date_time', models.DateTimeField(verbose_name='Login Date and Time')),
                ('user_agent_data', models.TextField(blank=True, null=True)),
                ('device_type', models.CharField(blank=True, max_length=100, null=True)),
                ('gps_location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='gps_login_record', to='common.location', verbose_name='GPS Location')),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='login_record', to='common.location', verbose_name='Location')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pictures',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=20, null=True, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, height_field='image_height', max_length=255, null=True, upload_to='images/', width_field='image_width')),
                ('image_width', models.PositiveIntegerField(blank=True, default='image_width', null=True)),
                ('image_height', models.PositiveIntegerField(blank=True, default='image_width', null=True)),
                ('classification', models.ManyToManyField(blank=True, related_name='picture', to='common.classification')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('firstname', models.TextField(db_column='firstname', null=True, verbose_name='First Name')),
                ('lastname', models.TextField(db_column='lastname', null=True, verbose_name='Last Name')),
                ('date_of_birth', models.CharField(db_column='birthdate', max_length=10, null=True, verbose_name='Birthdate')),
                ('national_code', models.TextField(db_column='national_code', null=True, verbose_name='National Code')),
                ('ssn', models.CharField(max_length=70272, null=True)),
                ('passport_number', models.TextField(db_column='passport_number', null=True, verbose_name='Passport Number')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], db_column='gender', max_length=496, null=True, verbose_name='Gender')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=255, null=True, unique=True, verbose_name='email address')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website Address')),
                ('nationality', models.TextField(db_column='nationality', null=True, verbose_name='Nationality')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='About Me')),
                ('jobs', models.ManyToManyField(to='common.jobs', verbose_name='Jobs')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='person', to=settings.AUTH_USER_MODEL)),
                ('pictures', models.ManyToManyField(blank=True, related_name='person', to='common.pictures')),
            ],
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(db_column='title', max_length=1166, null=True, verbose_name='Title')),
                ('country', models.CharField(db_column='country', max_length=686, null=True, verbose_name='Country')),
                ('state', models.CharField(db_column='state', max_length=686, null=True, verbose_name='State')),
                ('city', models.CharField(db_column='city', max_length=686, null=True, verbose_name='City')),
                ('address', models.CharField(db_column='address', max_length=1966, null=True, verbose_name='Address')),
                ('postalcode', models.CharField(db_column='postalcode', max_length=606, null=True, verbose_name='Postalcode')),
                ('phoneNumber', models.CharField(db_column='phone_number', max_length=606, null=True, verbose_name='Phone Number')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website Address')),
                ('usage', models.TextField(db_column='usage', null=True, verbose_name='Usage')),
                ('area', models.CharField(blank=True, db_column='area', max_length=542, null=True, verbose_name='Area')),
                ('num_floors', models.CharField(blank=True, db_column='num_floors', max_length=414, null=True, verbose_name='Number Floors')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='place', to='common.location', verbose_name='Location')),
                ('manager', models.ForeignKey(blank=True, db_column='manager', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='manager_place', to='common.person', verbose_name='Manager')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PersonPlace',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('priority', models.CharField(db_column='priority', max_length=414, null=True, verbose_name='Priority')),
                ('role', models.CharField(db_column='role', max_length=686, null=True, verbose_name='Role and Position')),
                ('responsibility', models.TextField(db_column='responsibility', null=True, verbose_name='Responsibility')),
                ('website', models.URLField(blank=True, null=True, verbose_name='آدرس وبسایت')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='person_place', to='common.person')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='place_person', to='common.places')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='person',
            name='address',
            field=models.ManyToManyField(blank=True, related_name='place_manager', through='common.PersonPlace', to='common.places'),
        ),
        migrations.CreateModel(
            name='LegalEntityPlaces',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('order', models.PositiveSmallIntegerField()),
                ('usage', models.CharField(max_length=128, null=True)),
                ('descrition', models.TextField()),
                ('legalentity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='through', to='common.legalentity')),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='throught', to='common.places')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='legalentity',
            name='address',
            field=models.ManyToManyField(related_name='legal_entity', through='common.LegalEntityPlaces', to='common.places'),
        ),
        migrations.CreateModel(
            name='DynamicTableTest2',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('firstname', models.TextField(db_column='firstname', null=True, verbose_name='نام')),
                ('lastname', models.TextField(db_column='lastname', null=True, verbose_name='نام خانوادگی')),
                ('national_code', models.TextField(db_column='national_code', null=True, verbose_name='شماره ملی')),
                ('date_of_birth', models.CharField(db_column='birthdate', max_length=10, null=True, verbose_name='تاریخ تولد')),
                ('gender', models.CharField(choices=[('Male', 'مرد'), ('Female', 'زن')], db_column='gender', max_length=10, null=True, verbose_name='جنسیت')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True, verbose_name='شماره همراه')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='توضیحات')),
                ('jobs', models.ManyToManyField(to='common.jobs', verbose_name='شغل')),
                ('pictures', models.ManyToManyField(blank=True, to='common.pictures', verbose_name='عکس')),
                ('address', models.ManyToManyField(blank=True, to='common.places', verbose_name='نشانی')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DynamicTableTest1',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('firstname', models.TextField(db_column='firstname', null=True, verbose_name='First Name')),
                ('lastname', models.TextField(db_column='lastname', null=True, verbose_name='Last Name')),
                ('date_of_birth', models.CharField(db_column='birthdate', max_length=10, null=True, verbose_name='Birthdate')),
                ('national_code', models.TextField(db_column='national_code', null=True, verbose_name='National Code')),
                ('ssn', models.CharField(max_length=12, null=True)),
                ('passport_number', models.TextField(db_column='passport_number', null=True, verbose_name='Passport Number')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], db_column='gender', max_length=10, null=True, verbose_name='Gender')),
                ('mobile_phone', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None, unique=True)),
                ('email', models.EmailField(blank=True, db_column='email', max_length=255, null=True, unique=True, verbose_name='email address')),
                ('website', models.URLField(blank=True, null=True, verbose_name='Website Address')),
                ('nationality', models.TextField(db_column='nationality', null=True, verbose_name='Nationality')),
                ('bio', models.TextField(blank=True, null=True, verbose_name='About Me')),
                ('jobs', models.ManyToManyField(to='common.jobs', verbose_name='Jobs')),
                ('pictures', models.ManyToManyField(blank=True, to='common.pictures')),
                ('address', models.ManyToManyField(blank=True, to='common.places')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('response', models.TextField()),
                ('respondent_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answer', to='common.person')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.question')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('title', models.CharField(max_length=100)),
                ('rating', models.PositiveIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(5)])),
                ('review', models.TextField()),
                ('classification', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='common_rating', to='common.classification')),
                ('rater_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='rating', to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('classification', models.ManyToManyField(related_name='schedule', to='common.classification')),
                ('dates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.dateslot', verbose_name='Dates')),
                ('times', models.ManyToManyField(to='common.timeslot', verbose_name='Times')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SchedulePlan',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('airline_ticket', models.CharField(blank=True, max_length=100, null=True)),
                ('hotel_reservation', models.CharField(blank=True, max_length=100, null=True)),
                ('other_details', models.TextField(blank=True, null=True)),
                ('model_documentation', models.ManyToManyField(related_name='common_schedule_plan', to='common.document')),
                ('schedule', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='schedule_plan', to='common.schedule')),
                ('traveler', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.person')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Setting',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('application', models.CharField(choices=[('contenttypes', 'contenttypes'), ('administration', 'administration'), ('common', 'common'), ('django_extensions', 'django_extensions'), ('rest_framework', 'rest_framework'), ('rest_framework_simplejwt', 'rest_framework_simplejwt'), ('sslserver', 'sslserver'), ('corsheaders', 'corsheaders'), ('token_blacklist', 'token_blacklist'), ('admin', 'admin'), ('auth', 'auth'), ('sessions', 'sessions'), ('messages', 'messages'), ('staticfiles', 'staticfiles'), ('django_user_agents', 'django_user_agents')], max_length=50)),
                ('page', models.CharField(blank=True, max_length=255, null=True)),
                ('model', models.CharField(blank=True, max_length=30, null=True)),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='setting_menus', to='administration.company')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SiteManagementLog',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('_ip4', models.CharField(db_column='ip4', max_length=558, null=True, verbose_name='IP4')),
                ('_ip6', models.CharField(db_column='ip6', max_length=990, null=True, verbose_name='IP6')),
                ('_link', models.TextField(db_column='link', null=True, verbose_name='Link')),
                ('_action', models.TextField(db_column='action', null=True, verbose_name='Action')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='site_management', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='question',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.survey'),
        ),
        migrations.CreateModel(
            name='SystemSettingsPic',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('app', models.CharField(blank=True, choices=[('contenttypes', 'contenttypes'), ('administration', 'administration'), ('common', 'common'), ('django_extensions', 'django_extensions'), ('rest_framework', 'rest_framework'), ('rest_framework_simplejwt', 'rest_framework_simplejwt'), ('sslserver', 'sslserver'), ('corsheaders', 'corsheaders'), ('token_blacklist', 'token_blacklist'), ('admin', 'admin'), ('auth', 'auth'), ('sessions', 'sessions'), ('messages', 'messages'), ('staticfiles', 'staticfiles'), ('django_user_agents', 'django_user_agents')], max_length=50, null=True)),
                ('name', models.CharField(blank=True, choices=[('swiper', 'Swiper'), ('prfpic', 'Profile Picture'), ('cflag', 'Contry Flag')], max_length=30, null=True)),
                ('max_image_size_width', models.PositiveIntegerField(default=1200, verbose_name='Max Image Size Width')),
                ('max_image_size_height', models.PositiveIntegerField(default=800, verbose_name='Max Image Size Height')),
                ('max_image_file_size_mb', models.PositiveIntegerField(default=2, help_text='Enter the maximum image file size in megabytes (MB).', verbose_name='Max Image File Size (MB)')),
                ('allowed_image_formats', models.JSONField(default=common.models.default_allowed_image_formats, verbose_name='Allowed Image Formats')),
                ('company', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='system_settings_pic', to='administration.company')),
            ],
            options={
                'unique_together': {('app', 'name')},
            },
        ),
        migrations.AddField(
            model_name='pictures',
            name='image_settings',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pictures', to='common.systemsettingspic'),
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=200, verbose_name='University Name')),
                ('website', models.URLField(verbose_name='Website Address')),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='common.location', verbose_name='Geographical Location')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='AcademicRecord',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('graduation_year', models.PositiveIntegerField(verbose_name='Graduations Year')),
                ('gpa', models.FloatField(verbose_name='GPA')),
                ('academic_category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.academiccategory', verbose_name='Academic Category')),
                ('academic_rank', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.academicrank', verbose_name='Academic Rank')),
                ('medical_degree', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.educationaldegree', verbose_name='Degree')),
                ('field_of_study', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.fieldofstudy', verbose_name='Field of Study')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.person', verbose_name='Person')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.university', verbose_name='University')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UniversityPlaces',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('name', models.CharField(max_length=80, verbose_name='University region Name')),
                ('description', models.TextField()),
                ('places', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_places', to='common.places')),
                ('type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='university_places', to='common.classification')),
                ('university', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='university_places', to='common.university')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='university',
            name='places',
            field=models.ManyToManyField(related_name='university', through='common.UniversityPlaces', to='common.places'),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('mobile_number', models.CharField(max_length=15)),
                ('bio', models.TextField(blank=True, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100, null=True)),
                ('website', models.URLField(blank=True, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='profile_images/')),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='cover_images/')),
                ('followers', models.ManyToManyField(blank=True, related_name='following', to=settings.AUTH_USER_MODEL)),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('session_key', models.CharField(max_length=40, unique=True, verbose_name='Session Key')),
                ('session_data', models.TextField(verbose_name='Session Data')),
                ('login_time', models.DateTimeField(auto_now_add=True, verbose_name='Login Time')),
                ('logout_time', models.DateTimeField(blank=True, null=True, verbose_name='Logout Time')),
                ('device_type', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_session', to='common.location', verbose_name='Location')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AlterUniqueTogether(
            name='person',
            unique_together={('nationality', 'national_code')},
        ),
        migrations.CreateModel(
            name='SettingMenus',
            fields=[
                ('id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('deleted_at', models.DateTimeField(editable=False, null=True)),
                ('index', models.SmallIntegerField(default=0, validators=[django.core.validators.MaxValueValidator(32766)])),
                ('name', models.CharField(max_length=100, null=True)),
                ('path', models.CharField(blank=True, max_length=200, null=True)),
                ('container_tag', models.CharField(choices=[('div', 'div'), ('section', 'section'), ('article', 'article'), ('', '')], max_length=15, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('url', models.URLField(blank=True, null=True, verbose_name='Website Address')),
                ('order', models.IntegerField(db_index=True)),
                ('cat', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='menus', to='common.setting')),
                ('individual_permission', models.ManyToManyField(blank=True, related_name='setting_menus', to='auth.permission')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sub_categories', to='common.settingmenus')),
                ('role', models.ManyToManyField(blank=True, related_name='settingMenus', to='auth.group')),
                ('tables', models.ManyToManyField(blank=True, related_name='setting_menus', to='common.appmodels')),
            ],
            options={
                'ordering': ['cat', 'index'],
                'unique_together': {('cat', 'index', 'name', 'parent', 'deleted_at')},
            },
        ),
    ]
